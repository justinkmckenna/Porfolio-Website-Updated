{"version":3,"sources":["webpack:///src/app/biography/biography.component.ts","webpack:///src/app/biography/biography.component.html","webpack:///src/app/experience/experience.component.ts","webpack:///src/app/experience/experience.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/hobbies/hobbies.component.ts","webpack:///src/app/hobbies/hobbies.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/front-end-skills/front-end-skills.component.ts","webpack:///src/app/front-end-skills/front-end-skills.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/back-end-skills/back-end-skills.component.ts","webpack:///src/app/back-end-skills/back-end-skills.component.html","webpack:///src/app/projects/project/project.component.ts","webpack:///src/app/projects/project/project.component.html","webpack:///src/app/projects/projects.component.ts","webpack:///src/app/projects/projects.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["BiographyComponent","selector","templateUrl","styleUrls","ExperienceComponent","experiences","experienceDate","experienceJobPosition","experienceCompanyLogo","experienceDescription","environment","production","HobbiesComponent","hobbies","name","description","image","AppComponent","title","FrontEndSkillsComponent","skills","percentage","AppModule","declarations","imports","providers","bootstrap","BackEndSkillsComponent","ProjectComponent","project","ProjectsComponent","projects","projectName","projectDescription","projectStack","projectDemo","projectRepo","projectImage","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-biography',\n  templateUrl: './biography.component.html',\n  styleUrls: ['./biography.component.scss']\n})\nexport class BiographyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"grid\">\n  <div class=\"img\"></div>\n  <div class=\"biography\">\n    <h5>Justin Mckenna</h5>\n    <h6>Full stack developer</h6>\n    <div class=\"flex\">\n      <i class=\"material-icons\">email</i>\n      <p>justin.k.mckenna@gmail.com</p>\n    </div>\n    <article>I'm a passionate developer with a B.S. in Computer Science from Kent State University, class of 2020.</article>\n  </div>\n</section>\n","import {Component, OnInit} from '@angular/core';\nimport {ExperienceModel} from '../model/experience.model';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.scss']\n})\nexport class ExperienceComponent implements OnInit {\n\n  experiences: ExperienceModel[] = [\n    {\n      experienceDate: 'Aug 2020 - Current',\n      experienceJobPosition: 'Web Developer',\n      experienceCompanyLogo: 'assets/someinsurancecompany.png',\n      experienceDescription: 'Working currently on creating a new Angular UI for customers, internals, and agents who service policies. Previous work includes internal software for uploading and modifying template documents for internals servicing customers.'\n    },\n    {\n      experienceDate: 'Jan 2019 - May 2020',\n      experienceJobPosition: 'Student Web Developer',\n      experienceCompanyLogo: 'assets/ksu.png',\n      experienceDescription: 'Assisted in development of applications for housing (to connect RAs with their students), room changes (students and change/swap rooms), student success (predict retention and GPA for each student to help with retention), and temporary keys (automating the key checkout process).'\n    }\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"grid\">\n  <h3>Experiences</h3>\n  <div *ngFor=\"let exp of experiences\" class=\"experience\">\n    <div class=\"img\" [ngStyle]=\"{'background-image': 'url(' + exp.experienceCompanyLogo + ')'}\"></div>\n    <aside >\n      <p class=\"experience--date\">{{exp.experienceDate}}</p>\n      <h4 class=\"experience--position\">{{exp.experienceJobPosition}}</h4>\n      <article class=\"experience--description\">{{exp.experienceDescription}}</article>\n    </aside>\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {HobbyModel} from '../model/hobby.model';\n\n@Component({\n  selector: 'app-hobbies',\n  templateUrl: './hobbies.component.html',\n  styleUrls: ['./hobbies.component.scss']\n})\nexport class HobbiesComponent implements OnInit {\n\n  hobbies: HobbyModel[] = [\n    {name: 'Music', description: 'I enjoy playing piano mostly, but also play drums and a little guitar.', image: 'assets/piano.jpg'},\n    {name: 'Exercise', description: 'I lift weights and hike often.', image: 'assets/dumbbells.jpg'},\n    {name: 'Reading', description: 'I mostly enjoy reading philosophy and psychology, but have recently been reading more fiction.', image: 'assets/books.jpg'}\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"grid\">\n  <h3>Hobbies</h3>\n  <div class=\"hobby\" *ngFor=\"let hobby of hobbies\">\n    <div class=\"hobby-img\" [ngStyle]=\"{'background-image': 'url(' + hobby.image + ')'}\"></div>\n    <h4 class=\"hobby-name\">{{hobby.name}}</h4>\n    <p class=\"hobby-description\">{{hobby.description}}</p>\n  </div>\n</section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'portfolio';\n}\n","<main class=\"grid\">\n  <app-biography class=\"biography-area component-default-styling\"></app-biography>\n  <app-front-end-skills class=\"fe-skill-area component-default-styling\"></app-front-end-skills>\n  <app-back-end-skills class=\"be-skill-area component-default-styling\"></app-back-end-skills>\n  <app-experience class=\"experience-area component-default-styling\"></app-experience>\n  <app-projects class=\"projects-area\"></app-projects>\n  <app-hobbies class=\"hobbies-area\"></app-hobbies>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport {SkillModel} from '../model/skill.model';\n\n@Component({\n  selector: 'app-front-end-skills',\n  templateUrl: './front-end-skills.component.html',\n  styleUrls: ['./front-end-skills.component.scss']\n})\nexport class FrontEndSkillsComponent implements OnInit {\n\n  skills: SkillModel[] = [\n    {name: 'Angular', percentage: 95},\n    {name: 'Typescript', percentage: 90},\n    {name: 'Redux', percentage: 90},\n    {name: 'CSS', percentage: 75},\n    {name: 'React', percentage: 70}\n    ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n  <h3>Front-End</h3>\n  <div class=\"flex\" *ngFor=\"let skill of skills\">\n    <p>{{skill.name}}</p>\n    <div class=\"progress-bar\">\n      <div class=\"progress-bar--fill\" [style.width.%]='skill.percentage'></div>\n    </div>\n  </div>\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BiographyComponent } from './biography/biography.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { ProjectComponent } from './projects/project/project.component';\nimport { ExperienceComponent } from './experience/experience.component';\nimport { FrontEndSkillsComponent } from './front-end-skills/front-end-skills.component';\nimport { BackEndSkillsComponent } from './back-end-skills/back-end-skills.component';\nimport { HobbiesComponent } from './hobbies/hobbies.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BiographyComponent,\n    ProjectsComponent,\n    ProjectComponent,\n    ExperienceComponent,\n    FrontEndSkillsComponent,\n    BackEndSkillsComponent,\n    HobbiesComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {SkillModel} from '../model/skill.model';\n\n@Component({\n  selector: 'app-back-end-skills',\n  templateUrl: './back-end-skills.component.html',\n  styleUrls: ['./back-end-skills.component.scss']\n})\nexport class BackEndSkillsComponent implements OnInit {\n\n  skills: SkillModel[] = [\n    {name: 'C#', percentage: 90},\n    {name: '.NET', percentage: 80},\n    {name: 'MS SQL', percentage: 75},\n    {name: 'Python', percentage: 75},\n    {name: 'Flask', percentage: 70},\n    {name: 'MongoDB', percentage: 70}\n  ];\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n  <h3>Back-End</h3>\n  <div class=\"flex\" *ngFor=\"let skill of skills\">\n    <p>{{skill.name}}</p>\n    <div class=\"progress-bar\">\n      <div class=\"progress-bar--fill\" [style.width.%]='skill.percentage'></div>\n    </div>\n  </div>\n</section>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ProjectModel} from '../../model/project.model';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\n\nexport class ProjectComponent implements OnInit {\n\n  @Input() project: ProjectModel;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"grid\">\n  <div class=\"img\" [ngStyle]=\"{'background-image': 'url(' + project.projectImage + ')'}\"></div>\n  <aside>\n    <ul>\n      <li *ngFor=\"let stack of project.projectStack\">#{{stack}}</li>\n    </ul>\n    <h5>{{project.projectName}}</h5>\n    <article>{{project.projectDescription}}</article>\n    <div class=\"flex\">\n      <a [href]=\"project.projectDemo\" target=\"_BLANK\">\n        <button class=\"button--demo\">Demo</button>\n      </a>\n      <a [href]=\"project.projectRepo\">\n        <button class=\"button--code\">Code</button>\n      </a>\n    </div>\n  </aside>\n</section>\n","import {Component, OnInit} from '@angular/core';\nimport {ProjectModel} from '../model/project.model';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  projects: ProjectModel[] = [\n    {\n      projectName: 'KSU Sports Statistics',\n      projectDescription: 'This was for my Senior Project at KSU. Myself and 3 others were tasked with creating a website to showcase Sports Statistics at KSU in a more informative way than implemented currently. I was the front end developer for the group and created a more polished, mobile friendly design.',\n      projectStack: ['Angular', 'TS', 'NGRX', 'MDB'],\n      projectDemo: 'https://www.youtube.com/embed/0pRRadQgbEI',\n      projectRepo: 'https://github.com/Capstone-Group-1/KSU-Sport-Statistics',\n      projectImage: 'assets/sports-stats.png'\n    },\n    {\n      projectName: 'Facial Recognition App',\n      projectDescription: 'I found a cool facial recognition library for python and wanted to make an app with it. A user uploads a picture, it is compared against a picture of someone on the server using the library, and it outputs whether the picture is of that person or not.',\n      projectStack: ['Python, Flask'],\n      projectDemo: 'https://www.youtube.com/embed/Ac9AInnN80A',\n      projectRepo: 'https://github.com/justinkmckenna/Facial-Recognition-App',\n      projectImage: 'assets/pope.png'\n\n    },\n    {\n      projectName: 'Web Scraper',\n      projectDescription: 'This program scrapes the social media site VK. The program logs in, scrolls through the news feed, and grabs all words in every post. It then outputs the word count and 10 most used words in english.',\n      projectStack: ['Python', 'Selenium'],\n      projectDemo: 'https://www.youtube.com/embed/6jE3JbdOLdc',\n      projectRepo: 'https://github.com/justinkmckenna/Web-Scraper',\n      projectImage: 'assets/web-scraper.png'\n    }\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"grid\">\n  <div class=\"header\">Side Projects</div>\n  <app-project *ngFor=\"let project of projects\" [project]=\"project\"></app-project>\n</section>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}